


************************************************
TO DO:



- create update function in SQLConnections for Locations and for Jobs

- create a admin page that displays all positions and locations. If they want to modify them, great! if they want to delete them,
create a message that shows where jobs are currently assigned those positions (sql will throw exception if deleting a position that a job 
has w/ a FK)


- also should really consider using stored procedures. writing this all is annoying
                          


*************************************************
IN PROGRESS:

               
- Set location boxes equal to jobModel.LinkedLocation.[fields]

              





**************************************************
FINISHED:

- fix LocationId mix up. Its displaying largestcity and capital for the wrong states
- finish taking out static classes

- when adding things to the database, should I assign them to a property and pass the property? or just pass the variable?
(position is a table with only an identifier column and description column)

-recruiter table is messed up for some reason.
also is returning null recruiterID throwing off the job selection?
once get all jobs can return recruiterid (if it exists) it should fix my FillLinkedRecruiter method


**************************************************
COOL FUNCTIONALITY IDEAS:

- Add spacebar selection

- Add "go to browser" link in link error message box 

- @@identityscope - use to return ID of last added value to DB - used with adding recruiter



**************************************************
ABANDONED IDEAS

- create edit page as a duplicate of viewjobs.xaml. Create with textboxes / comboboxes where user can update info 
(This seemed to cumbersome. Decided to change textBlocks to textBoxes and set them to readonly=false on edit mode)

